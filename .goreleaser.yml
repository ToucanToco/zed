---
builds:
  - id: "linux-amd64-gnu"
    goos: ["linux"]
    goarch: ["amd64"]
    env: ["CC=x86_64-unknown-linux-gnu-gcc", "CGO_ENABLED=1"]
    main: &main "./cmd/zed"
    binary: &binary "zed"
    mod_timestamp: &mod_timestamp "{{ .CommitTimestamp }}"
    flags: &flags ["-trimpath"]
    asmflags: &asmflags ["all=-trimpath={{ .Env.GITHUB_WORKSPACE }}"]
    gcflags: &gcflags ["all=-trimpath={{ .Env.GITHUB_WORKSPACE }}"]
    ldflags: &ldflags
      - "-s -w"
      - "-X github.com/jzelinskie/cobrautil/v2.Version=v{{ .Version }}"
  - id: "linux-amd64-musl"
    goos: ["linux"]
    goarch: ["amd64"]
    env: ["CC=x86_64-unknown-linux-musl-gcc", "CGO_ENABLED=1"]
    main: *main
    binary: *binary
    mod_timestamp: *mod_timestamp
    flags: *flags
    asmflags: *asmflags
    gcflags: *gcflags
    ldflags: *ldflags
  - id: "linux-arm64-gnu"
    goos: ["linux"]
    goarch: ["arm64"]
    env: ["CC=aarch64-unknown-linux-gnu-gcc", "CGO_ENABLED=1"]
    main: *main
    binary: *binary
    mod_timestamp: *mod_timestamp
    flags: *flags
    asmflags: *asmflags
    gcflags: *gcflags
    ldflags: *ldflags
  - id: "linux-arm64-musl"
    goos: ["linux"]
    goarch: ["arm64"]
    env: ["CC=aarch64-unknown-linux-musl-gcc", "CGO_ENABLED=1"]
    main: *main
    binary: *binary
    mod_timestamp: *mod_timestamp
    flags: *flags
    asmflags: *asmflags
    gcflags: *gcflags
    ldflags: *ldflags
  - id: "windows-amd64"
    goos: ["windows"]
    goarch: ["amd64"]
    env: ["CC=x86_64-w64-mingw32-gcc", "CGO_ENABLED=1"]
    main: *main
    binary: *binary
    mod_timestamp: *mod_timestamp
    flags: *flags
    asmflags: *asmflags
    gcflags: *gcflags
    ldflags: *ldflags
  - id: "darwin-amd64"
    goos: ["darwin"]
    goarch: ["amd64"]
    env: ["CGO_ENABLED=1"]
    main: *main
    binary: *binary
    mod_timestamp: *mod_timestamp
    flags: *flags
    asmflags: *asmflags
    gcflags: *gcflags
    ldflags: *ldflags
  - id: "darwin-arm64"
    goos: ["darwin"]
    goarch: ["arm64"]
    env: ["CGO_ENABLED=1"]
    main: *main
    binary: *binary
    mod_timestamp: *mod_timestamp
    flags: *flags
    asmflags: *asmflags
    gcflags: *gcflags
    ldflags: *ldflags

archives:
  - id: "gnu"
    builds:
      - "linux-amd64-gnu"
      - "linux-arm64-gnu"
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ if .Mips }}_{{ .Mips }}{{ end }}_gnu"
  - id: "musl"
    builds:
      - "linux-amd64-musl"
      - "linux-arm64-musl"
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ if .Mips }}_{{ .Mips }}{{ end }}_musl"
  - id: "other"
    builds:
      - "darwin-amd64"
      - "darwin-arm64"
      - "windows-amd64"

nfpms:
  - id: "gnu"
    vendor: &vendor "authzed inc."
    homepage: &homepage "https://authzed.com/"
    maintainer: &maintainer "authzed <support@authzed.com>"
    description: &description "manage Authzed from your command line."
    license: &license "Apache 2.0"
    epoch: &epoch "0"
    builds: ["linux-amd64-gnu", "linux-arm64-gnu"]
    formats: ["deb", "rpm"]
  - id: "musl"
    vendor: *vendor
    homepage: *homepage
    maintainer: *maintainer
    description: *description
    license: *license
    epoch: *epoch
    builds: ["linux-amd64-musl", "linux-arm64-musl"]
    formats: ["apk"]

furies:
  - account: "authzed"
    secret_name: "GEMFURY_PUSH_TOKEN"
    skip: "{{ gt (len .Prerelease) 0 }}"

brews:
  - tap:
      owner: "authzed"
      name: "homebrew-tap"
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    ids: ["gnu", "other"]
    url_template: "https://github.com/authzed/zed/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    download_strategy: "CurlDownloadStrategy"
    commit_author:
      name: "authzedbot"
      email: "infrastructure@authzed.com"
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    homepage: "https://authzed.com/"
    description: "manage Authzed from your command line."
    license: "Apache-2.0"
    folder: "Formula"
    custom_block: |
      head "https://github.com/authzed/zed.git", :branch => "main"
    dependencies:
      - name: "go"
        type: "build"
    test: |
      system "#{bin}/zed version"
    install: |
      if !File.exists? "zed"
        system "go build --ldflags \"-s -w -X github.com/jzelinskie/cobrautil/v2.Version=$(git describe --always --abbrev=7 --dirty)\" ./cmd/zed"
      end
      bin.install "zed"
      (bash_completion/"zed").write Utils.safe_popen_read("#{bin}/zed", "completion", "bash")
      (zsh_completion/"_zed").write Utils.safe_popen_read("#{bin}/zed", "completion", "zsh")
      (fish_completion/"zed.fish").write Utils.safe_popen_read("#{bin}/zed", "completion", "fish")

checksum:
  name_template: "checksums.txt"

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  use: "github-native"
  sort: "asc"

release:
  prerelease: "auto"
  footer: |
    ## Docker Images
    This release is available at `authzed/zed:v{{ .Version }}`, `quay.io/authzed/zed:v{{ .Version }}`, `ghcr.io/authzed/zed:v{{ .Version }}`
